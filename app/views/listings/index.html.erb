<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Listings - SellNest</title>
  <style>
      body {
          font-family: Arial, sans-serif;
          margin: 0;
          padding: 0;
          background-color: #f7f7f7;
          display: flex;
          justify-content: center;
          align-items: center;
          height: 100vh;
          flex-direction: column;
      }

      .container {
          text-align: center;
          width: 80%;
      }

      h1 {
          color: #333;
      }

      .grid-container {
          display: grid;
          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
          gap: 20px;
          justify-content: center;
          align-items: stretch;
      }

      .grid-item {
          text-align: left;
          border: 1px solid #ddd;
          padding: 10px;
          background-color: white;
          height: 100%;
      }

      .carousel-container {
          position: relative;
          overflow: hidden;
      }

      .carousel {
          display: flex;
          transition: transform 0.3s ease-in-out;
      }

      .carousel img {
          max-width: 100%;
          height: auto;
          border-bottom: 1px solid #ddd;
          margin-bottom: 10px;
      }

      .carousel-controls {
          position: absolute;
          top: 50%;
          width: 100%;
          display: flex;
          justify-content: space-between;
          transform: translateY(-50%);
      }

      .carousel-arrow {
          background: none;
          border: none;
          cursor: pointer;
          font-size: 20px;
      }

      a {
          color: #ffd700;
          text-decoration: none;
      }

      a:hover {
          text-decoration: underline;
      }

      button {
          background-color: #333;
          color: white;
          border: none;
          padding: 10px 20px;
          margin: 10px;
          border-radius: 5px;
          cursor: pointer;
          transition: background-color 0.3s;
      }

      button:hover {
          background-color: #333;
      }

      .text-logo {
          display: block;
          text-align: center;
          font-size: 24px;
          font-weight: bold;
          color: #ffd700;
          text-decoration: none;
          margin-bottom: 20px;
      }

      .listing-title {
          font-size: 18px;
          margin: 10px 0;
      }

      .listing-price {
          font-size: 20px;
          margin-bottom: 10px;
      }

      .listing-buttons {
          display: flex;
          justify-content: space-between;
      }

      .modal {
          display: none;
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.5);
          justify-content: center;
          align-items: center;
      }

      .modal-content {
          background-color: white;
          padding: 20px;
          border-radius: 5px;
          max-width: 600px;
          margin: 0 auto;
          text-align: center;
      }

      .close {
          color: #aaa;
          float: right;
          font-size: 28px;
          font-weight: bold;
          cursor: pointer;
      }

      .close:hover {
          color: black;
      }
  </style>
</head>
<body>
<div class="container">
  <a href="/" class="text-logo">SellNest</a>
  <h1>Listings</h1>

  <button id="sortPrice">Sort by Price</button>
  <button id="sortDate">Sort by Date</button>

  <div class="grid-container">
    <% @listings.each do |listing| %>
      <div class="grid-item">
        <div class="carousel-container">
          <div class="carousel">
            <% listing.photos.each do |photo| %>
              <%= image_tag(photo, width: '100%', height: 'auto') %>
            <% end %>
          </div>
          <% if listing.photos.length > 1 %>
            <div class="carousel-controls">
              <button class="carousel-arrow" onclick="prevSlide(this)">❮</button>
              <button class="carousel-arrow" onclick="nextSlide(this)">❯</button>
            </div>
          <% end %>
        </div>
        <h2 class="listing-title"><%= link_to listing.name, edit_listing_path(listing) %></h2>
        <h2 class="listing-price"><%= number_to_currency(listing.price, unit: "$", precision: 2) %></h2>
        <div class="listing-buttons">
          <button class="button details-button" onclick="showDescriptionModal('<%= listing.name %>', '<%= number_to_currency(listing.price, unit: "$", precision: 2) %>', '<%= listing.description %>')">Details</button>
          <%= link_to 'Edit', edit_listing_path(listing), class: 'button edit-button' %>
          <%= button_to 'Buy', '#', method: :post, class: 'button buy-button'%>
        </div>
      </div>
    <% end %>
  </div>
</div>
<%= link_to 'Create New Listing', new_listing_path, class: "button" %>
<div id="descriptionModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeDescriptionModal()">&times;</span>
    <h2 class="listing-title" id="modalTitle"></h2>
    <h2 class="listing-price" id="modalPrice"></h2>
    <p id="modalDescription"></p>
  </div>
</div>
<script>
    function prevSlide(button) {
        const carousel = button.parentElement.previousElementSibling;
        carousel.appendChild(carousel.firstElementChild);
    }

    function nextSlide(button) {
        const carousel = button.parentElement.previousElementSibling;
        carousel.prepend(carousel.lastElementChild);
    }

    function showDescriptionModal(title, price, description, photos) {
        const modal = document.getElementById('descriptionModal');
        const modalTitle = document.getElementById('modalTitle');
        const modalPrice = document.getElementById('modalPrice');
        const modalDescription = document.getElementById('modalDescription');

        modalTitle.innerHTML = title;
        modalPrice.innerHTML = price;
        modalDescription.innerHTML = description;
        modal.style.display = 'flex';
    }

    function closeDescriptionModal() {
        const modal = document.getElementById('descriptionModal');
        modal.style.display = 'none';
    }

    // Close modal if the user clicks outside the modal content
    window.onclick = function(event) {
        const modal = document.getElementById('descriptionModal');
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    }

    // Ensure the DOM is fully loaded
    document.addEventListener('DOMContentLoaded', () => {
        // Initialize a variable to keep track of the sort order
        let sortOrder = 'ascending'; // The initial sort order

        document.getElementById('sortPrice').addEventListener('click', () => {
            // Select all listings within the container
            let listings = document.querySelectorAll('.grid-container .grid-item');
            let sortedListings;

            if (sortOrder === 'ascending') {
                sortedListings = Array.from(listings).sort((a, b) => {
                    let priceA = parseFloat(a.querySelector('.listing-price').textContent.replace(/[$,]/g, ''));
                    let priceB = parseFloat(b.querySelector('.listing-price').textContent.replace(/[$,]/g, ''));
                    return priceA - priceB;
                });
                sortOrder = 'descending'; // Toggle the sort order for the next click
            } else {
                sortedListings = Array.from(listings).sort((a, b) => {
                    let priceA = parseFloat(a.querySelector('.listing-price').textContent.replace(/[$,]/g, ''));
                    let priceB = parseFloat(b.querySelector('.listing-price').textContent.replace(/[$,]/g, ''));
                    return priceB - priceA;
                });
                sortOrder = 'ascending'; // Toggle the sort order for the next click
            }

            // Container of listings
            let listingsContainer = document.querySelector('.grid-container');
            // Append sorted listings back to the container
            sortedListings.forEach(listing => {
                listingsContainer.appendChild(listing);
            });

            // Optionally, update the button text to reflect the sort order
            document.getElementById('sortPrice').textContent = sortOrder === 'ascending' ? 'Sort by Price (Ascending)' : 'Sort by Price (Descending)';
        });

        var isAscending = true; // Tracks the current sorting order

        document.getElementById('sortDate').addEventListener('click', function() {
            var sortParam = isAscending ? 'asc' : 'desc';
            window.location.href = '?sort_by_date=' + sortParam;
            isAscending = !isAscending; // Toggle the sorting order for the next click
        });
    });
</script>
</body>
</html>